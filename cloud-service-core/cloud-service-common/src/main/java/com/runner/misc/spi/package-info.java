package com.runner.misc.spi;

/**
 * the disadvantage of java spi:
 *1. Java SPI 需要通过反射机制来加载服务实现。大量使用反射会影响性能
 * 2.SPI 的加载过程是通过当前线程的上下文类加载器完成的，若应用在复杂的类加载环境（如应用服务器）中运行，可能导致类冲突或类不可见问题
 * 3.Java SPI 默认会加载所有可用的实现类，但无法为不同实现设置优先级。所有实现一视同仁，没有内置的机制选择最合适的实现
 * 4.Java SPI 配置文件是简单的类名列表，缺乏其他元数据信息，无法动态配置实现的初始化参数
 * 5.Java SPI 是通过文件配置和反射进行服务发现的，没有依赖注入（DI）或自动化的生命周期管理，开发者需要手动管理服务实例
 * 6.Java SPI 只支持简单的单例服务加载，对于需要多实例（不同配置的多个实现）的情况，Java SPI 无法直接支持
 * 7.Java SPI 在服务加载失败时只会抛出异常，开发者难以对加载失败的情况做细粒度处理
 */